/*
Oracle Code.
 */
CREATE TABLE CONTESTS (
  CONTEST_ID INTEGER,
  HACKER_ID  INTEGER,
  NAME       NVARCHAR2(255)
);

INSERT INTO CONTESTS (CONTEST_ID, HACKER_ID, NAME) VALUES (66406, 17973, 'Rose');
INSERT INTO CONTESTS (CONTEST_ID, HACKER_ID, NAME) VALUES (66556, 79153, 'Angela');
INSERT INTO CONTESTS (CONTEST_ID, HACKER_ID, NAME) VALUES (94828, 80275, 'Frank');

CREATE TABLE COLLEGES (
  COLLEGE_ID INTEGER,
  CONTEST_ID INTEGER
);

INSERT INTO COLLEGES (COLLEGE_ID, CONTEST_ID) VALUES (11219, 66406);
INSERT INTO COLLEGES (COLLEGE_ID, CONTEST_ID) VALUES (32473, 66556);
INSERT INTO COLLEGES (COLLEGE_ID, CONTEST_ID) VALUES (56685, 94828);

CREATE TABLE CHALLENGES (
  CHALLENGE_ID INTEGER,
  COLLEGE_ID   INTEGER
);

INSERT INTO CHALLENGES (CHALLENGE_ID, COLLEGE_ID) VALUES (18765, 11219);
INSERT INTO CHALLENGES (CHALLENGE_ID, COLLEGE_ID) VALUES (47127, 11219);
INSERT INTO CHALLENGES (CHALLENGE_ID, COLLEGE_ID) VALUES (60292, 32473);
INSERT INTO CHALLENGES (CHALLENGE_ID, COLLEGE_ID) VALUES (72974, 56685);

CREATE TABLE VIEW_STATS (
  CHALLENGE_ID       INTEGER,
  TOTAL_VIEWS        INTEGER,
  TOTAL_UNIQUE_VIEWS INTEGER
);

INSERT INTO VIEW_STATS (CHALLENGE_ID, TOTAL_VIEWS, TOTAL_UNIQUE_VIEWS) VALUES (47127, 26, 19);
INSERT INTO VIEW_STATS (CHALLENGE_ID, TOTAL_VIEWS, TOTAL_UNIQUE_VIEWS) VALUES (47127, 15, 14);
INSERT INTO VIEW_STATS (CHALLENGE_ID, TOTAL_VIEWS, TOTAL_UNIQUE_VIEWS) VALUES (18765, 43, 10);
INSERT INTO VIEW_STATS (CHALLENGE_ID, TOTAL_VIEWS, TOTAL_UNIQUE_VIEWS) VALUES (18765, 72, 13);
INSERT INTO VIEW_STATS (CHALLENGE_ID, TOTAL_VIEWS, TOTAL_UNIQUE_VIEWS) VALUES (75516, 35, 17);
INSERT INTO VIEW_STATS (CHALLENGE_ID, TOTAL_VIEWS, TOTAL_UNIQUE_VIEWS) VALUES (60292, 11, 10);
INSERT INTO VIEW_STATS (CHALLENGE_ID, TOTAL_VIEWS, TOTAL_UNIQUE_VIEWS) VALUES (72974, 41, 15);
INSERT INTO VIEW_STATS (CHALLENGE_ID, TOTAL_VIEWS, TOTAL_UNIQUE_VIEWS) VALUES (75516, 75, 11);


CREATE TABLE SUBMISSION_STATS (
  CHALLENGE_ID               INTEGER,
  TOTAL_SUBMISSIONS          INTEGER,
  TOTAL_ACCEPTED_SUBMISSIONS INTEGER
);

INSERT INTO SUBMISSION_STATS (CHALLENGE_ID, TOTAL_SUBMISSIONS, TOTAL_ACCEPTED_SUBMISSIONS) VALUES (75516, 34, 12);
INSERT INTO SUBMISSION_STATS (CHALLENGE_ID, TOTAL_SUBMISSIONS, TOTAL_ACCEPTED_SUBMISSIONS) VALUES (47127, 27, 10);
INSERT INTO SUBMISSION_STATS (CHALLENGE_ID, TOTAL_SUBMISSIONS, TOTAL_ACCEPTED_SUBMISSIONS) VALUES (47127, 56, 18);
INSERT INTO SUBMISSION_STATS (CHALLENGE_ID, TOTAL_SUBMISSIONS, TOTAL_ACCEPTED_SUBMISSIONS) VALUES (75516, 74, 12);
INSERT INTO SUBMISSION_STATS (CHALLENGE_ID, TOTAL_SUBMISSIONS, TOTAL_ACCEPTED_SUBMISSIONS) VALUES (75516, 83, 8);
INSERT INTO SUBMISSION_STATS (CHALLENGE_ID, TOTAL_SUBMISSIONS, TOTAL_ACCEPTED_SUBMISSIONS) VALUES (72974, 68, 24);
INSERT INTO SUBMISSION_STATS (CHALLENGE_ID, TOTAL_SUBMISSIONS, TOTAL_ACCEPTED_SUBMISSIONS) VALUES (72974, 82, 14);
INSERT INTO SUBMISSION_STATS (CHALLENGE_ID, TOTAL_SUBMISSIONS, TOTAL_ACCEPTED_SUBMISSIONS) VALUES (47127, 28, 11);

----
DROP TABLE CONTESTS;
DROP TABLE COLLEGES;
DROP TABLE CHALLENGES;
DROP TABLE VIEW_STATS;
DROP TABLE SUBMISSION_STATS;


SELECT
  CONTESTS.CONTEST_ID,
  HACKER_ID,
  NAME,
  SUM(CASE
      WHEN TOTAL_VIEWS IS NULL
        THEN 0
      ELSE TOTAL_VIEWS
      END) AS TOTAL_VIEWS,
  SUM(
      CASE
      WHEN TOTAL_UNIQUE_VIEWS IS NULL
        THEN 0
      ELSE TOTAL_UNIQUE_VIEWS
      END
  )        AS TOTAL_UNIQUE_VIEWS
FROM CONTESTS
  LEFT JOIN COLLEGES ON CONTESTS.CONTEST_ID = COLLEGES.CONTEST_ID
  LEFT JOIN CHALLENGES ON COLLEGES.COLLEGE_ID = CHALLENGES.COLLEGE_ID
  LEFT JOIN VIEW_STATS ON CHALLENGES.CHALLENGE_ID = VIEW_STATS.CHALLENGE_ID
GROUP BY
  CONTESTS.CONTEST_ID, HACKER_ID, NAME;


SELECT
  CONTESTS.CONTEST_ID,
  HACKER_ID,
  NAME,
  SUM(CASE
      WHEN TOTAL_SUBMISSIONS IS NULL
        THEN 0
      ELSE TOTAL_SUBMISSIONS
      END) AS TOTAL_VIEWS,
  SUM(
      CASE
      WHEN TOTAL_ACCEPTED_SUBMISSIONS IS NULL
        THEN 0
      ELSE TOTAL_ACCEPTED_SUBMISSIONS
      END
  )        AS TOTAL_UNIQUE_VIEWS
FROM CONTESTS
  LEFT JOIN COLLEGES ON CONTESTS.CONTEST_ID = COLLEGES.CONTEST_ID
  LEFT JOIN CHALLENGES ON COLLEGES.COLLEGE_ID = CHALLENGES.COLLEGE_ID
  LEFT JOIN SUBMISSION_STATS ON CHALLENGES.CHALLENGE_ID = SUBMISSION_STATS.CHALLENGE_ID
GROUP BY
  CONTESTS.CONTEST_ID, HACKER_ID, NAME;


/*
Final
*/

WITH V_STATS AS (
    SELECT
      CONTESTS.CONTEST_ID,
      HACKER_ID,
      NAME,
      SUM(CASE
          WHEN TOTAL_VIEWS IS NULL
            THEN 0
          ELSE TOTAL_VIEWS
          END) AS TOTAL_VIEWS,
      SUM(
          CASE
          WHEN TOTAL_UNIQUE_VIEWS IS NULL
            THEN 0
          ELSE TOTAL_UNIQUE_VIEWS
          END
      )        AS TOTAL_UNIQUE_VIEWS
    FROM CONTESTS
      LEFT JOIN COLLEGES ON CONTESTS.CONTEST_ID = COLLEGES.CONTEST_ID
      LEFT JOIN CHALLENGES ON COLLEGES.COLLEGE_ID = CHALLENGES.COLLEGE_ID
      LEFT JOIN VIEW_STATS ON CHALLENGES.CHALLENGE_ID = VIEW_STATS.CHALLENGE_ID
    GROUP BY
      CONTESTS.CONTEST_ID, HACKER_ID, NAME
), SUBMISSIONS AS (
    SELECT
      CONTESTS.CONTEST_ID,
      HACKER_ID,
      NAME,
      SUM(CASE
          WHEN TOTAL_SUBMISSIONS IS NULL
            THEN 0
          ELSE TOTAL_SUBMISSIONS
          END) AS TOTAL_SUBMISSIONS,
      SUM(
          CASE
          WHEN TOTAL_ACCEPTED_SUBMISSIONS IS NULL
            THEN 0
          ELSE TOTAL_ACCEPTED_SUBMISSIONS
          END
      )        AS TOTAL_ACCEPTED_SUBMISSIONS
    FROM CONTESTS
      LEFT JOIN COLLEGES ON CONTESTS.CONTEST_ID = COLLEGES.CONTEST_ID
      LEFT JOIN CHALLENGES ON COLLEGES.COLLEGE_ID = CHALLENGES.COLLEGE_ID
      LEFT JOIN SUBMISSION_STATS ON CHALLENGES.CHALLENGE_ID = SUBMISSION_STATS.CHALLENGE_ID
    GROUP BY
      CONTESTS.CONTEST_ID, HACKER_ID, NAME
) SELECT
    V_STATS.CONTEST_ID,
    V_STATS.HACKER_ID,
    V_STATS.NAME,
    SUBMISSIONS.TOTAL_SUBMISSIONS,
    SUBMISSIONS.TOTAL_ACCEPTED_SUBMISSIONS,
    V_STATS.TOTAL_VIEWS,
    V_STATS.TOTAL_UNIQUE_VIEWS
  FROM V_STATS
    FULL OUTER JOIN SUBMISSIONS
      ON V_STATS.CONTEST_ID = SUBMISSIONS.CONTEST_ID AND V_STATS.HACKER_ID = SUBMISSIONS.HACKER_ID
  WHERE (TOTAL_SUBMISSIONS + TOTAL_ACCEPTED_SUBMISSIONS + TOTAL_VIEWS + TOTAL_UNIQUE_VIEWS) > 0
ORDER BY CONTEST_ID;