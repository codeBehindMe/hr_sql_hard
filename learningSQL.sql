/*
15 Days of learning SQL
 */

/*
Julia conducted a  days of learning SQL contest. The start date of the contest was March 01, 2016 and the end date was March 15, 2016.

Write a query to print total number of unique hackers who made at least 1 submission each day (starting on the first day of the contest), and find the hacker_id and name of the hacker who made maximum number of submissions each day. If more than one such hacker has a maximum number of submissions, print the lowest hacker_id. The query should print this information for each day of the contest, sorted by the date.

 */


CREATE TABLE HACKERS (
  HACKER_ID INTEGER,
  NAME      NVARCHAR2(255)
);

INSERT INTO HACKERS (HACKER_ID, NAME) VALUES (15758, 'Rose');
INSERT INTO HACKERS (HACKER_ID, NAME) VALUES (20703, 'Angela');
INSERT INTO HACKERS (HACKER_ID, NAME) VALUES (36396, 'Frank');
INSERT INTO HACKERS (HACKER_ID, NAME) VALUES (38289, 'Patrick');
INSERT INTO HACKERS (HACKER_ID, NAME) VALUES (44065, 'Lisa');
INSERT INTO HACKERS (HACKER_ID, NAME) VALUES (53473, 'Kimberly');
INSERT INTO HACKERS (HACKER_ID, NAME) VALUES (62529, 'Bonnie');
INSERT INTO HACKERS (HACKER_ID, NAME) VALUES (79722, 'Michael');
COMMIT;

CREATE TABLE SUBMISSIONS (
  SUBMISSION_DATE DATE,
  SUBMISSION_ID   INTEGER,
  HACKER_ID       INTEGER,
  SCORE           INTEGER
);

INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-01', 'YYYY-MM-DD'), 8494, 20703, 0);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-01', 'YYYY-MM-DD'), 22403, 53473, 15);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-01', 'YYYY-MM-DD'), 23965, 79722, 60);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-01', 'YYYY-MM-DD'), 30173, 36396, 70);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-02', 'YYYY-MM-DD'), 34928, 20703, 0);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-02', 'YYYY-MM-DD'), 38740, 15758, 60);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-02', 'YYYY-MM-DD'), 42769, 79722, 25);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-02', 'YYYY-MM-DD'), 44364, 79722, 60);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-03', 'YYYY-MM-DD'), 45440, 20703, 0);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-03', 'YYYY-MM-DD'), 49050, 36396, 70);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-03', 'YYYY-MM-DD'), 50273, 79722, 5);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-04', 'YYYY-MM-DD'), 50344, 20703, 0);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-04', 'YYYY-MM-DD'), 51360, 44065, 90);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-04', 'YYYY-MM-DD'), 54404, 53473, 65);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-04', 'YYYY-MM-DD'), 61533, 79722, 45);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-05', 'YYYY-MM-DD'), 72852, 20703, 0);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-05', 'YYYY-MM-DD'), 74546, 38289, 0);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-05', 'YYYY-MM-DD'), 76487, 62529, 0);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-05', 'YYYY-MM-DD'), 82439, 36396, 10);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-05', 'YYYY-MM-DD'), 90006, 36396, 40);
INSERT INTO SUBMISSIONS (SUBMISSION_DATE, SUBMISSION_ID, HACKER_ID, SCORE)
VALUES (TO_DATE('2016-03-06', 'YYYY-MM-DD'), 90404, 20703, 0);
COMMIT;


DROP TABLE HACKERS;
DROP TABLE SUBMISSIONS;


SELECT *
FROM SUBMISSIONS
  LEFT JOIN HACKERS ON SUBMISSIONS.HACKER_ID = HACKERS.HACKER_ID;


/*
Production
 */
WITH ConsistentHackers (submission_date, hacker_id) AS (
  SELECT
    s.SUBMISSION_DATE,
    s.HACKER_ID
  FROM SUBMISSIONS s
  WHERE s.SUBMISSION_DATE = TO_DATE('2016-03-01', 'YYYY-MM-DD')
  UNION ALL
  SELECT
    ch.SUBMISSION_DATE + 1,
    s.HACKER_ID
  FROM SUBMISSIONS s
    INNER JOIN ConsistentHackers ch
      ON s.HACKER_ID = ch.HACKER_ID
         AND s.SUBMISSION_DATE = ch.SUBMISSION_DATE + 1
), ConsistencyCount AS (
    SELECT
      ch.submission_date,
      COUNT(DISTINCT ch.hacker_id) AS ConsistentHackers
    FROM ConsistentHackers ch
    GROUP BY ch.submission_date
), SubmissionSummary AS (
    SELECT
      s.SUBMISSION_DATE,
      s.HACKER_ID,
      ROW_NUMBER()
      OVER (
        PARTITION BY s.SUBMISSION_DATE
        ORDER BY COUNT(*) DESC, s.HACKER_ID ASC
        ) AS RANKING
    FROM SUBMISSIONS s
    GROUP BY
      s.SUBMISSION_DATE,
      s.HACKER_ID
) SELECT ss.SUBMISSION_DATE,
  cc.ConsistentHackers,
  h.HACKER_ID,
  h.NAME
  FROM SubmissionSummary ss
    INNER JOIN ConsistencyCount cc
      ON ss.SUBMISSION_DATE = cc.submission_date
         AND ss.RANKING = 1
    JOIN HACKERS h ON ss.HACKER_ID = h.HACKER_ID
  ORDER BY ss.SUBMISSION_DATE ASC;
